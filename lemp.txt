#!/bin/bash
##
# <UDF name="ssuser" Label="New user" example="username" />
# <UDF name="sspassword" Label="New user password" example="Password" />
# <UDF name="hostname" Label="Hostname" example="examplehost" />
# <UDF name="website" Label="Website" example="example.com" />
# <UDF name="db_password" Label="MySQL root Password" example="Password" />
# <UDF name="db_name" Label="MySQL Database" example="exampledb" />
# <UDF name="db_user" Label="MySQL User" example="exampleuser" />
# <UDF name="db_user_password" Label="MySQL User Password" example="Password" />

# Get helpers
wget https://raw.githubusercontent.com/jiafulow/star-ring-stackscripts/master/helpers.txt
source helpers.txt

# Update system
system_update
system_set_hostname
system_set_timezone

# Secure server
user_add_sudo
setup_unattended_upgrades
harden_ssh_access
ufw_install
fail2ban_install

# Install LEMP stack
nginx_install
mariadb_install
php_install

# MySQL
mysql -uroot -p${DB_PASSWORD} -e "CREATE DATABASE ${DB_NAME};"
mysql -uroot -p${DB_PASSWORD} -e "CREATE USER '${DB_USER}' IDENTIFIED BY '${DB_USER_PASSWORD}';"
mysql -uroot -p${DB_PASSWORD} -e "GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}';"
mysql -uroot -p${DB_PASSWORD} -e "FLUSH PRIVILEGES;"
systemctl restart mysql

# NGINX
mkdir -p /var/www/html/${WEBSITE}/public_html
cat > /etc/nginx/sites-available/${WEBSITE}.conf <<EOF
server {
    listen         80;
    listen         [::]:80;
    server_name    ${WEBSITE} www.${WEBSITE};
    root           /var/www/html/${WEBSITE}/public_html;
    index          index.html;

    location / {
      try_files \$uri \$uri/ =404;
    }

    location ~* \.php$ {
      fastcgi_pass unix:/run/php/php7.3-fpm.sock;
      include         fastcgi_params;
      fastcgi_param   SCRIPT_FILENAME    \$document_root\$fastcgi_script_name;
      fastcgi_param   SCRIPT_NAME        \$fastcgi_script_name;
    }
}
EOF

ln -s /etc/nginx/sites-available/${WEBSITE}.conf /etc/nginx/sites-enabled/
nginx_reload

# Mediawiki
mediawiki_install
postfix_install_loopback_only

# Tuning
# - see https://www.linode.com/docs/websites/hosting-a-website-ubuntu-18-04/

# Add SSL
# - see https://www.linode.com/docs/quick-answers/websites/secure-http-traffic-certbot/

stackscript_cleanup
